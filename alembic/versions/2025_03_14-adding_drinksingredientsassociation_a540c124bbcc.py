"""adding DrinksIngredientsAssociation.

Revision ID: a540c124bbcc
Revises: 11ca08befee1
Create Date: 2025-03-14 21:49:33.645511

"""

from __future__ import annotations

from typing import TYPE_CHECKING

import sqlalchemy as sa

from alembic import op

if TYPE_CHECKING:
    from collections.abc import Sequence

# revision identifiers, used by Alembic.
revision: str = "a540c124bbcc"
down_revision: str | None = "11ca08befee1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ingredients",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("alcohol_content", sa.Float(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        schema="mxr",
    )
    op.create_table(
        "drink_ingredient_associations",
        sa.Column("drinks_id", sa.Integer(), nullable=False),
        sa.Column("ingredients_id", sa.Integer(), nullable=False),
        sa.Column("measurement", sa.String(length=50), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["drinks_id"],
            ["mxr.drinks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ingredients_id"],
            ["mxr.ingredients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("drinks_id", "ingredients_id"),
        schema="mxr",
    )
    op.create_index("drinks_id", "drink_ingredient_associations", ["drinks_id"], unique=False, schema="mxr")
    op.create_index("ingredients_id", "drink_ingredient_associations", ["ingredients_id"], unique=False, schema="mxr")
    op.add_column("drinks", sa.Column("alcohol_content", sa.Float(), nullable=True), schema="mxr")
    op.add_column("drinks", sa.Column("data_source", sa.String(), nullable=True), schema="mxr")
    op.add_column("drinks", sa.Column("drink_type", sa.String(), nullable=True), schema="mxr")
    op.add_column("drinks", sa.Column("glass", sa.String(), nullable=True), schema="mxr")
    op.drop_column("drinks", "ingredients", schema="mxr")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("drinks", sa.Column("ingredients", sa.VARCHAR(), autoincrement=False, nullable=False), schema="mxr")
    op.drop_column("drinks", "glass", schema="mxr")
    op.drop_column("drinks", "drink_type", schema="mxr")
    op.drop_column("drinks", "data_source", schema="mxr")
    op.drop_column("drinks", "alcohol_content", schema="mxr")
    op.drop_index("ingredients_id", table_name="drink_ingredient_associations", schema="mxr")
    op.drop_index("drinks_id", table_name="drink_ingredient_associations", schema="mxr")
    op.drop_table("drink_ingredient_associations", schema="mxr")
    op.drop_table("ingredients", schema="mxr")
    # ### end Alembic commands ###
